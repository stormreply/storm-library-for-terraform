name: Prepare

inputs:

  terraform_app_id:
    required: true
  terraform_private_key:
    required: true
  # TODO: move app-token action out of prepare, init at very beginning and pass to prepare.
  # this way, we could create an alternative token easier
  # token:
  #   required: true

  account_id:
    required: false
  backend_region:
    required: false
  environment:
    required: false
  use_oidc:
    required: false
    default: "true"

outputs:
  account_id:
    description: Id of the AWS account we are deploying to
    value: ${{ steps.setup.outputs.account_id }}
  # TODO: rename to "token"
  app_token:
    description: App token for GitHub API access
    value: ${{ steps.setup.outputs.token }}
  backend_bucket:
    description: Central administration backend bucket
    value: ${{ steps.setup.outputs.backend_bucket }}
  backend_region:
    description: Central administration backend region
    value: ${{ steps.setup.outputs.backend_region }}
  deployment_name:
    description: Name of this deployment
    value: ${{ steps.setup.outputs.deployment_name}}
  deployment_region:
    description: Region resources are being deployed to
    value: ${{ steps.setup.outputs.deployment_region }}
  state_file:
    description: Name of the state file
    value: ${{ steps.setup.outputs.state_file }}

runs:
  using: composite
  steps:

    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   shell: bash
    #   run: echo "$GITHUB_CONTEXT"

    - name: Time
      shell: bash
      run: date

    - name: Setup
      id: setup
      uses: stormreply/storm-library-for-terraform/.github/actions/setup@main
      with:
        account_id: ${{ inputs.account_id }}
        app_id: ${{ inputs.terraform_app_id }}
        backend_region: ${{ inputs.backend_region }}
        environment: ${{ inputs.environment }}
        private_key: ${{ inputs.terraform_private_key }}
        # token: ${{ inputs.token }}

    - name: Checkout repository
      uses: actions/checkout@v4

    # NOTE: position *behind* checkout
    - name: Git config rewrite URLs
      shell: bash
      run: |
        # Git config rewrite URLs
        TOKEN=${{ steps.setup.outputs.token }}
        git config --global url."https://x-access-token:$TOKEN@github.com/".insteadOf "https://github.com/"
        git config --global url."https://x-access-token:$TOKEN@github.com/".insteadOf "git@github.com:"

    - name: Show git configs
      shell: bash
      run: |
        # Show git configs
        echo "global .gitconfig:"
        cat ~/.gitconfig
        echo "local .git/config:"
        cat .git/config

    - name: Download providers.tf
      uses: stormreply/storm-library-for-terraform/.github/actions/download@main
      with:
        token: ${{ steps.setup.outputs.token }}
        file: providers.tf

    - name: Download terraform.tf
      uses: stormreply/storm-library-for-terraform/.github/actions/download@main
      with:
        token: ${{ steps.setup.outputs.token }}
        file: terraform.tf

    - name: Set deployment tags
      uses: stormreply/storm-library-for-terraform/.github/actions/set/deployment-tags@main
      with:
        deployment_name: ${{ steps.setup.outputs.deployment_name }}
        environment: ${{ inputs.environment }}

    - name: Set backend profile in AWS config
      uses: stormreply/storm-library-for-terraform/.github/actions/set/backend-profile@main
      with:
        account_id: ${{ steps.setup.outputs.account_id }}
        backend_region: ${{ steps.setup.outputs.backend_region }}
        backend_role: slt-0-storm-library-for-terraform-backend
        use_oidc: ${{ inputs.use_oidc }}

    - name: Set deployment profile in AWS config
      uses: stormreply/storm-library-for-terraform/.github/actions/set/deployment-profile@main
      with:
        account_id: ${{ steps.setup.outputs.account_id }}
        deployment_region: ${{ steps.setup.outputs.deployment_region }}
        deployment_role: slt-0-storm-library-for-terraform-deployment
        use_oidc: ${{ inputs.use_oidc }}
