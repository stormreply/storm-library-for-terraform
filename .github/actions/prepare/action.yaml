name: Prepare

inputs:

  terraform_app_id:
    required: true
  terraform_private_key:
    required: true

  account_id:
    required: false
  environment:
    required: false
  region:
    required: false
  use_oidc:
    required: false
    default: "true"

outputs:
  account_id:
    description: Id of the AWS account we are deploying to
    value: ${{ steps.get-basic-setup.outputs.account_id }}
  app_token:
    description: App token for GitHub API access
    value: ${{ steps.get-basic-setup.outputs.token }}
  bucket:
    description: Central administration bucket
    value: ${{ steps.get-basic-setup.outputs.bucket }}
  deployment:
    description: Name of this deployment
    value: ${{ steps.get-basic-setup.outputs.deployment_name}}
  region:
    description: AWS region we are deploying to
    value: ${{ steps.get-basic-setup.outputs.region }}
  state_file:
    description: Name of the state file
    value: ${{ steps.get-basic-setup.outputs.state_file }}

runs:
  using: composite
  steps:

    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   shell: bash
    #   run: echo "$GITHUB_CONTEXT"

    - name: Time
      shell: bash
      run: date

    - name: Get basic setup
      id: get-basic-setup
      uses: stormreply/storm-library-for-terraform/.github/actions/get-basic-setup@main
      with:
        account_id: ${{ inputs.account_id }}
        app_id: ${{ vars.TERRAFORM_APP_ID }}
        environment: ${{ inputs.environment }}
        private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up access token
      shell: bash
      run: |
        TOKEN=${{ steps.get-basic-setup.outputs.token}}
        git config --global url."https://x-access-token:$TOKEN@github.com/".insteadOf "https://github.com/"

    - name: Download providers.tf
      shell: bash
      run: |
        TOKEN=${{ steps.app-token.outputs.token }}
        curl \
          -H "Accept: application/vnd.github.raw" \
          -o providers.tf \
          https://x-access-token:$TOKEN@api.github.com/repos/stormreply/storm-library-for-terraform/contents/providers.tf \
        2> /dev/null

    - name: Download terraform.tf
      shell: bash
      run: |
        TOKEN=${{ steps.app-token.outputs.token }}
        curl \
          -H "Accept: application/vnd.github.raw" \
          -o terraform.tf \
          https://x-access-token:$TOKEN@api.github.com/repos/stormreply/storm-library-for-terraform/contents/terraform.tf \
        2> /dev/null

    - name: Create deployment variables
      shell: bash
      run: |
        repository=${{ github.repository }}
        repo=${repository##*/}
        deployment_name=${{ steps.get-basic-setup.outputs.deployment_name }}

        cat << EOF >> github.tfvars
        deployment = {
          actor       = "${{ github.actor }}"
          environment = "${{ inputs.environment }}"
          name        = "${deployment_name}"
          ref         = "${{ github.ref }}"
          ref_name    = "${{ github.ref_name }}"
          repo        = "${repo}"
          repository  = "${{ github.repository }}"
          sha         = "${{ github.sha }}"
          time        = "$(date)"
        }
        EOF

        cat github.tfvars

    - name: AWS configure
      uses: stormreply/storm-library-for-terraform/.github/actions/aws-configure@main
      with:
        account_id: ${{ steps.get-basic-setup.outputs.account_id }}
        region: ${{ steps.get-basic-setup.outputs.region }}
        backend_role: slt-0-storm-library-for-terraform-backend
        deployment_role: slt-0-storm-library-for-terraform-deployment
        use_oidc: ${{ inputs.use_oidc }}
