name: Terraform plan

inputs:
  environment:
    required: true
  expires_after: # TODO: remove after testing
    required: true
  region:
    required: true
  release:
    required: true
  repository:
    required: true
  tfvars:
    required: true

runs:
  using: "composite"
  steps:

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform init with S3 backend
      # working-directory: ${{ env.tf_working_dir != '' && env.tf_working_dir || env.GITHUB_WORKSPACE }}
      # if: ${{ env.tf_local_backend == 'false' }}
      shell: bash
      run: |
        git config --list --show-origin
        terraform init \
          -backend-config="bucket=storm-github-terraform-backend" \
          -backend-config="profile=backend" \
          -backend-config="key=${{ inputs.repository }}/${{ inputs.environment }}" \
          -backend-config="region=${{ inputs.region }}" \
          -backend-config="use_lockfile=true"

    - name: Terraform plan
      shell: bash
      run: |
        unset AWS_SECRET_ACCESS_KEY
        unset AWS_SESSION_TOKEN
        unset AWS_ACCESS_KEY_ID

        export AWS_PROFILE=oidc
        echo "AWS_PROFILE=oidc" >> $GITHUB_ENV

        tfvars=github.tfvars
        [-n "${{ inputs.tfvars }}"] && tfvars="${{ inputs.tfvars }} $tfvars"

        terraform version
        terraform plan \
          -input=false \
          -out=tfplan \
          -var-file=<(cat $tfvars) \
        && terraform show tfplan

    - name: Upload tfplan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan

    - name: Register expiry
      shell: bash
      run: |
        repository=${{ inputs.repository }}
        repo=${repository##*/}
        deployment="storm-${repo}-${{ inputs.environment }}"
        echo "github.repository: ${{github.repository}}"
        echo "repository: ${repository}"
        expiry=$(date -d "now + ${{ inputs.expires_after}}" +"%Y-%m-%d-%H-%M-%S")
        expiry_file="${expiry}-${deployment}"
        touch ${expiry_file}
        aws s3 cp ${expiry_file} s3://storm-github-terraform-backend/expiries/  # TODO: s.o.