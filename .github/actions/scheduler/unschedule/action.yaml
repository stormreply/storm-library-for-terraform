name: Unschedule actions

inputs:
  action:
    required: true

runs:
  using: composite
  steps:

    - name: Unschedule actions
      shell: bash
      run: |
        # scheduler/unschedule

        backend_bucket=${{ env.BACKEND_BUCKET }}

        action=${{ inputs.action }}
        account_id=${{ env.DEPLOYMENT_ACCOUNT }}
        region=${{ env.DEPLOYMENT_REGION }}
        repo=${{ env.REPO }}
        environment=${{ env.ENVIRONMENT }}

        jobs=$(
          aws s3api list-objects-v2 \
            --bucket ${backend_bucket} \
            --prefix schedule \
            --query 'Contents[].Key'
        )

        [ "${jobs}" != "null" ] && jobs=$(echo "${jobs}" | jq -r ".[]") || jobs=""

        pattern="${action}.${account_id}.${region}.${repo}.${environment}"

        if [ -n "$jobs" ] ; then
          for key in $jobs ; do
            if echo "$key" | grep -E "$pattern" > /dev/null ; then
              echo -n "REMOVE $key... "
              aws s3 rm s3://${backend_bucket}/${key} > /dev/null
              echo DONE
            else
              echo "SKIP   $key"
            fi
          done
        else
          echo "no jobs to unschedule."
        fi
