name: Prepare repository

inputs:
  environment:
    required: true
  release:
    required: true
  token:
    required: true

outputs:
  # deployment:
  #   value: ${{ steps.create_github_tfvars.outputs.deployment }}
  repository:
    value: ${{ steps.create_github_tfvars.outputs.repository }}

runs:
  using: "composite"
  steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "$GITHUB_CONTEXT"

    - name: Create github tfvars
      id: create_github_tfvars
      shell: bash
      run: |
        repository=${{ github.repository }}
        repo=${repository##*/}
        name="storm-${repo}-${{ inputs.environment }}"
        echo "repository=${{ github.repository }}" >> $GITHUB_OUTPUT

        cat << EOF >> github.tfvars
        deployment = {
          actor       = "${{ github.actor }}"
          environment = "${{ inputs.environment }}"
          name        = "${name}"
          ref         = "${{ github.ref }}"
          ref_name    = "${{ github.ref_name }}"
          release     = "${{ inputs.release }}"
          repo        = "${repo}"
          repository  = "${{ github.repository }}"
          sha         = "${{ github.sha }}"
          time        = "$(date)"
        }
        EOF

        echo $GITHUB_OUTPUT
        cat  $GITHUB_OUTPUT

        ls -la

        cat github.tfvars

    - name: Download providers
      shell: bash
      run: |
        curl \
          -H "Accept: application/vnd.github.raw+json" \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -o foo \
          https://api.github.com/repos/stormreply/terraform-workflow-controller/contents/

        ls -la

        cat providers.tf
