name: Prepare repository

inputs:
  environment:
    required: true
  release:
    required: true
  terraform_app_id:
    required: true
  terraform_private_key:
    required: true

outputs:
  repository:
    value: ${{ steps.create_github_tfvars.outputs.repository }}

runs:
  using: "composite"
  steps:

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "$GITHUB_CONTEXT"

    # - uses: actions/create-github-app-token@v1
    #   id: app_token
    #   with:
    #     app-id: ${{ inputs.terraform_app_id }}
    #     private-key: ${{ inputs.terraform_private_key }}
    #     owner: ${{ github.repository_owner }}

    - name: Create github tfvars
      id: create_github_tfvars
      shell: bash
      run: |
        repository=${{ github.repository }}
        repo=${repository##*/}
        name="storm-${repo}-${{ inputs.environment }}"
        echo "repository=${{ github.repository }}" >> $GITHUB_OUTPUT

        cat << EOF >> github.tfvars
        deployment = {
          actor       = "${{ github.actor }}"
          environment = "${{ inputs.environment }}"
          name        = "${name}"
          ref         = "${{ github.ref }}"
          ref_name    = "${{ github.ref_name }}"
          release     = "${{ inputs.release }}"
          repo        = "${repo}"
          repository  = "${{ github.repository }}"
          sha         = "${{ github.sha }}"
          time        = "$(date)"
        }
        EOF

        echo $GITHUB_OUTPUT
        cat  $GITHUB_OUTPUT
        ls -la
        cat github.tfvars

    # - name: Set up Git credentials
    #   shell: bash
    #   run: |
    #     TOKEN=${{ steps.app_token.outputs.token}}
    #     echo TOKEN=$TOKEN
    #     # git config --global url."https://$TOKEN@github.com/".insteadOf "https://github.com/"
    #     # git config --global --unset-all http.https://github.com/.extraheader
    #     git config --global credential.helper store
    #     echo "https://$TOKEN@github.com" > ~/.git-credentials
    #     git config --global user.email "github-actions@github.com"
    #     git config --global user.name "GitHub Actions"


    # - name: Create askpass
    #   shell: bash
    #   run: |
    #     export GIT_ASKPASS=/tmp/git-askpass.sh
    #     echo 'echo "x-access-token:${{ steps.app_token.outputs.token }}"' > /tmp/git-askpass.sh
    #     chmod +x /tmp/git-askpass.sh

    # - name: Download providers
    #   shell: bash
    #   run: |
    #     curl \
    #       -H "Authorization: Bearer ${{ inputs.token }}" \
    #       -H "Accept: application/vnd.github.raw" \
    #       -o providers.tf \
    #       https://api.github.com/repos/stormreply/terraform-workflow-controller/contents/providers.tf

    #     ls -la

    #     echo "${{ inputs.token }}" >> token

    #     cat token
    #     cat providers.tf