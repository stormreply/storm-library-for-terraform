name: Set deployment name

runs:
  using: composite
  steps:

    - name: download catalog.yaml
      uses: stormreply/storm-library-for-terraform/.github/actions/download@main
      with:
        file: catalog.yaml

    - name: get catalog id
      id: get-catalog-id
      shell: bash
      run: |
        # set-environment/from-others/get-catalog-id
        status=$(
          cat catalog.yaml | jq '( .status // empty )' 2> /dev/null \
          || true
        ) # "|| true" is for jq can't parse - as it ought to be yaml
        # status is "" or HTTP error code
        if [ -n "$status" ] ; then
          cat catalog.yaml
          echo "::error ::status from download call is $status"
          exit 1
        fi

        repository=${{ github.repository }}
        repo=${repository##*/}

        yq '.catalog["'${repo}'"]' catalog.yaml > catalog_item.yaml
        catalog_id=$(cat catalog_item.yaml | yq .id)
        [ "$catalog_id" = "null" ] \
          && echo "::error ::${repo} or its id are not known to the catalog" \
          && exit 1

        echo "catalog_id=$catalog_id" >> $GITHUB_OUTPUT

    - name: set deployment name
      id: set-deployment-name
      shell: bash
      run: |
        # set-environment/from-others/set-deployment-name
        catalog_id=${{ steps.get-catalog-id.outputs.catalog_id }}

        catalog_reference="slt-${catalog_id}"
        short_name="$catalog_reference"
        rm catalog.yaml

        repository=${{ github.repository }}
        repo=${repository##*/}

        name="${catalog_reference}-${repo}"

        if [ "${catalog_id}" != "0" ] ; then
          [ -n "${{ env.ENVIRONMENT }}" ] \
          && environment="${{ env.ENVIRONMENT }}" \
          || environment="${{ github.actor }}"
          name="${name}-${environment}"
          short_name="${short_name}-${environment}"
        fi

        cat << EOF | tee -a $GITHUB_ENV
        DEPLOYMENT_NAME=$name
        REPOSITORY=$repository
        REPO=$repo
        SHORT_NAME=$short_name
        EOF
