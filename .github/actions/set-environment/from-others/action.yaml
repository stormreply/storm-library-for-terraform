name: Set environment from others

runs:
  using: composite
  steps:

    - name: set token
      if: env.PRIVATE_ACCESS_TOKEN != '' || env.TERRAFORM_PRIVATE_KEY != ''
      id: set-token
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-others/set-token@main

    - name: set backend bucket
      if: env.BACKEND_ACCOUNT != ''
      id: set-backend-bucket
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-others/set-backend-bucket@main

    - name: set deployment name
      id: set-deployment-name
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-others/set-deployment-name@main

    - name: set state file
      id: set-state-file
      uses: stormreply/storm-library-for-terraform/.github/actions/get/state-file@main
      with:
        deployment_name: ${{ steps.get-deployment-name.outputs.name }}

    - name: set env from others
      id: set-environment-from-others
      shell: bash
      run: |
        # set-environment/from-others

        BACKEND_BUCKET="${{ steps.get-backend-bucket.outputs.backend_bucket}}"
        DEPLOYMENT_NAME="${{ steps.get-deployment-name.outputs.name }}"
        STATE_FILE="${{ steps.get-state-file.outputs.state_file }}"
        TOKEN="${{ steps.get-token.outputs.token }}"

        # TEMPORARILY
        DEPLOYMENT_ACCOUNT=${{ env.BACKEND_ACCOUNT }}
        DEPLOYMENT_REGION=${{ env.BACKEND_REGION }}
        # TEMPORARILY

        cat << EOF >> $GITHUB_ENV
        BACKEND_BUCKET=$BACKEND_BUCKET
        BACKEND_ROLE=slt-0-storm-library-for-terraform-backend
        DEPLOYMENT_ACCOUNT=$DEPLOYMENT_ACCOUNT
        DEPLOYMENT_NAME=$DEPLOYMENT_NAME
        DEPLOYMENT_REGION=$DEPLOYMENT_REGION
        DEPLOYMENT_ROLE=slt-0-storm-library-for-terraform-deployment
        STATE_FILE=$STATE_FILE
        TOKEN=$TOKEN
        EOF
