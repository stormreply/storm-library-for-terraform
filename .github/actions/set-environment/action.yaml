name: Set environment vars

inputs:
  github_token:
    required: false
  personal_access_token:
    required: false
  terraform_private_key:
    required: false
  json:
    required: false
  yaml:
    required: false

runs:
  using: composite
  steps:

    - name: Time
      shell: bash
      run: date | tee -a $GITHUB_STEP_SUMMARY

    - name: set environment from secrets
      id: set-environment-from-secrets
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-secrets@main
      with:
        github_token: ${{ inputs.github_token }}
        personal_access_token: ${{ inputs.personal_access_token }}
        terraform_private_key: "${{ inputs.terraform_private_key }}"

    - name: set environment from vars
      if: inputs.json != ''
      id: set-environment-from-vars
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-vars@main
      with:
        json: ${{ inputs.json }}

    - name: set environment from inputs
      if: inputs.yaml != ''
      id: set-environment-from-inputs
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-inputs@main
      with:
        yaml: ${{ inputs.yaml }}

    # TODO: implement "from SLT", retrieving vars from slt repo and saving them immediately

    - name: set environment from others
      id: set-environment-from-others
      uses: stormreply/storm-library-for-terraform/.github/actions/set-environment/from-others@main

    - name: show environment vars
      id: show-environment-vars
      shell: bash
      run: |
        # show-environment-vars

        STATUS="OK"
        [ -z "$BACKEND_ACCOUNT"    ] && echo "::error ::Github repository variable BACKEND_ACCOUNT not set" && STATUS="ERROR"
        [ -z "$BACKEND_REGION"     ] && echo "::error ::Github repository variable BACKEND_REGION not set" && STATUS="ERROR"
        [ -z "$DEPLOYMENT_ACCOUNT" ] && echo "::error ::Github repository variable DEPLOYMENT_ACCOUNT not set" && STATUS="ERROR"
        [ -z "$DEPLOYMENT_REGION"  ] && echo "::error ::Github repository variable DEPLOYMENT_REGION not set" && STATUS="ERROR"
        echo "STATUS: [$STATUS]"
        cat << EOF >> $GITHUB_STEP_SUMMARY

        | Parameters                    |                    |
        |:------------------------------|--------------------|
        | access domain                 | $ACCESS_DOMAIN     |
        | access role                   | $ACCESS_ROLE       |
        | backend account               | $BACKEND_ACCOUNT   |
        | backend region                | $BACKEND_REGION    |
        | deployment account            | $BACKEND_ACCOUNT   |
        | deployment region             | $BACKEND_REGION    |
        | environment                   | $ENVIRONMENT       |
        | oidc principal                | $OIDC_PRINCIPAL    |
        | terraform app id              | $TERRAFORM_APP_ID  |
        | **Computed**                  |                    |
        | backend bucket                | $BACKEND_BUCKET    |
        | deployment name               | $DEPLOYMENT_NAME   |
        | short name                    | $SHORT_NAME        |
        | state file                    | $STATE_FILE        |
        | **Token type**                | $TOKEN_TYPE        |

        EOF

        [ "$STATUS" = "OK" ] && exit 0 || exit 1