name: Get basic setup

inputs:

  backend_account:
    required: true
  environment:
    required: false
  private_access_token:
    required: false
  terraform_app_id:
    required: false
  terraform_private_key:
    required: false


outputs:
  backend_bucket:
    description: Central administration backend bucket
    value: ${{ steps.get-backend-bucket.outputs.backend_bucket }}
  deployment_name:
    description: Name of our deployment
    value: ${{ steps.get-deployment-name.outputs.deployment_name }}
  state_file:
    description: Terraform State file we are gonna use
    value: ${{ steps.get-state-file.outputs.state_file }}
  token:
    description: Token to use for GitHub calls
    value: ${{ steps.get-token.outputs.token}}

runs:
  using: composite
  steps:

    - name: Get Token
      id: get-token
      uses:
      with:
        private_access_token: ${{ inputs.private_access_token }}
        terraform_app_id: ${{ inputs.terraform_app_id }}
        terraform_private_key: ${{ inputs.terraform_private_key }}

    - name: Get backend bucket
      id: get-backend-bucket
      uses: stormreply/storm-library-for-terraform/.github/actions/get/backend-bucket@main
      with:
        backend_account: ${{ inputs.backend_account }}

    - name: Get deployment name
      id: get-deployment-name
      uses: stormreply/storm-library-for-terraform/.github/actions/get/deployment-name@main
      with:
        environment: ${{ inputs.environment }}
        token: ${{ steps.get-token.outputs.token}}

    - name: Get state file
      id: get-state-file
      uses: stormreply/storm-library-for-terraform/.github/actions/get/state-file@main
      with:
        deployment_name: ${{ steps.get-deployment-name.outputs.deployment_name }}
