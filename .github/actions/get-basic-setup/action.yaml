name: Get basic setup

inputs:

  app_id:
    required: true
  private_key:
    required: true

  account_id:
    required: false
  environment:
    required: false
  region:
    required: false

outputs:
  account_id:
    description: Id of the AWS account we are deploying to
    value: ${{ steps.get-account-id.outputs.value }}
  bucket:
    description: Central administration bucket
    value: ${{ steps.get-bucket-name.outputs.bucket }}
  deployment_name:
    description: Name of our deployment
    value: ${{ steps.get-deployment-name.outputs.name }}
  region:
    description: AWS region we are deploying to
    value: ${{ steps.get-region.outputs.value }}
  state_file:
    description: Terraform State file we are gonna use
    value: ${{ steps.get-state-file.outputs.state_file }}
  token:
    description: Token to use for GitHub calls
    value: ${{ steps.app-token.outputs.token}}

runs:
  using: composite
  steps:

    - name: Create Github app token
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app_id }}
        private-key: ${{ inputs.private_key }}
        owner: ${{ github.repository_owner }}

    - name: Get account id
      id: get-account-id
      uses: stormreply/storm-library-for-terraform/.github/actions/get-repository-variable@main
      with:
        repository: stormreply/storm-library-for-terraform
        token: ${{ steps.app-token.outputs.token}}
        use_if_set: ${{ inputs.account_id }}
        variable: ACCOUNT_ID

    - name: Get region
      id: get-region
      uses: stormreply/storm-library-for-terraform/.github/actions/get-repository-variable@main
      with:
        repository: stormreply/storm-library-for-terraform
        token: ${{ steps.app-token.outputs.token}}
        use_if_set: ${{ inputs.region }}
        variable: REGION

    - name: Get bucket name
      id: get-bucket-name
      uses: stormreply/storm-library-for-terraform/.github/actions/get-bucket-name@main
      with:
        account_id: ${{ steps.get-account-id.outputs.value }}

    - name: Get deployment name
      id: get-deployment-name
      uses: stormreply/storm-library-for-terraform/.github/actions/get-deployment-name@main
      with:
        environment: ${{ inputs.environment }}

    - name: Get state file
      id: get-state-file
      uses: stormreply/storm-library-for-terraform/.github/actions/get-state-file@main
      with:
        deployment_name: ${{ steps.get-deployment-name.outputs.name }}
