name: Set backend credentials

inputs:
  access_token:
    required: true

runs:
  using: composite
  steps:
    - name: Set backend credentials
      shell: bash
      run: |
        # init/set-backend-credentials

        echo "login into account ${{ env.BACKEND_ACCOUNT }} with role ${{ env.ACCESS_ROLE }}"

        # TODO: fix masking or write to .env before and take from .env here
        echo "::add-mask::${{ inputs.access_token }}"

        CREDENTIALS=$(
          aws sso get-role-credentials \
            --account-id ${{ env.BACKEND_ACCOUNT }} \
            --region ${{ env.BACKEND_REGION }} \
            --role-name ${{ env.ACCESS_ROLE }} \
            --access-token '${{ inputs.access_token }}'
        )

        export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | yq '.roleCredentials.accessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | yq '.roleCredentials.secretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | yq '.roleCredentials.sessionToken')

        # echo "::add-mask::$AWS_ACCESS_KEY_ID"
        echo "::add-mask::$AWS_SECRET_ACCESS_KEY"
        echo "::add-mask::$AWS_SESSION_TOKEN"

        cat << EOF | tee -a $GITHUB_ENV
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN
        AWS_DEFAULT_REGION=${{ env.BACKEND_REGION }}
        EOF
