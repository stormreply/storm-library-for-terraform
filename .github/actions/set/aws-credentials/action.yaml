name: Set role credentials

inputs:
  access_role:
    required: true
  access_token:
    required: true
  backend_account:
    required: true
  backend_region:
    required: true

runs:
  using: composite
  steps:
    - name: Export AWS environment variables
      shell: bash
      run: |
        echo "login into account ${{ inputs.backend_account }} with role ${{ inputs.access_role }}"

        # TODO: fix masking or write to .env before and take from .env here
        echo "::add-mask::${{ inputs.access_token }}"

        CREDENTIALS=$(
          aws sso get-role-credentials \
            --account-id ${{ inputs.backend_account }} \
            --region ${{ inputs.backend_region }} \
            --role-name ${{ inputs.access_role }} \
            --access-token '${{ inputs.access_token }}'
        )

        export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | yq '.roleCredentials.accessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | yq '.roleCredentials.secretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | yq '.roleCredentials.sessionToken')

        # echo "::add-mask::$AWS_ACCESS_KEY_ID"
        echo "::add-mask::$AWS_SECRET_ACCESS_KEY"
        echo "::add-mask::$AWS_SESSION_TOKEN"

        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
        echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"
        echo "AWS_DEFAULT_REGION=${{ inputs.backend_region }}"

        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ inputs.backend_region }}" >> $GITHUB_ENV
