name: Apply

permissions:
  contents: read
  id-token: write

on:
  workflow_call:
    inputs:
      lifetime:
        type: string
        required: false
        default: 1 hour
      wait:
        type: string
        required: false
        default: ""
      environment:
        type: string
        required: false
        default: ""
      var_file:
        type: string
        required: false
        default: ""

jobs:

  schedule:
    if: inputs.wait != ''
    runs-on: ubuntu-latest
    steps:

      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          environment: ${{ inputs.environment }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Schedule apply
        uses: stormreply/storm-library-for-terraform/.github/actions/scheduler/schedule@main
        with:
          action: apply
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          deployment_account: ${{ vars.BACKEND_ACCOUNT }} # TODO:
          deployment_name: ${{ steps.prepare.outputs.deployment_name }}
          deployment_region: ${{ steps.prepare.outputs.deployment_region }}
          environment: ${{ inputs.environment }}
          lifetime: ${{ inputs.lifetime }}
          wait: ${{ inputs.wait }}

  check:
    if: inputs.wait == ''
    runs-on: ubuntu-latest
    steps:

      # TODO: reduce Prepare here to sth leaner like checkout repo + rewrite git config
      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Check Code
        uses: stormreply/storm-library-for-terraform/.github/actions/check-code@main
        id: check-code

  plan:
    if: inputs.wait == ''
    runs-on: ubuntu-latest
    steps:

      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          environment: ${{ inputs.environment }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Terraform plan
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/plan@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ steps.prepare.outputs.backend_region }}
          state_file: ${{ steps.prepare.outputs.state_file }}
          var_file: ${{ inputs.var_file}}

  apply:
    needs: plan
    runs-on: ubuntu-latest
    steps:

      # - name: Download tfplan
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: tfplan

      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          environment: ${{ inputs.environment }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Terraform apply
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/apply@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ steps.prepare.outputs.backend_region }}
          state_file: ${{ steps.prepare.outputs.state_file }}
          var_file: ${{ inputs.var_file }}

      - name: Schedule destroy
        uses: stormreply/storm-library-for-terraform/.github/actions/scheduler/schedule@main
        with:
          action: destroy
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          deployment_account: ${{ vars.BACKEND_ACCOUNT }} # TODO:
          deployment_name: ${{ steps.prepare.outputs.deployment_name }}
          deployment_region: ${{ steps.prepare.outputs.deployment_region }}
          environment: ${{ inputs.environment }}
          wait: ${{ inputs.lifetime }}
