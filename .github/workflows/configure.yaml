name: Configure

on:
  workflow_dispatch:
    inputs:
      access_domain:
        required: true
        default: storm-unity
      account_id:
        required: true
        default: 123456789012
      region:
        required: false
        default: eu-central-1

jobs:

  sso:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.sso.outputs.access_token }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Single sign on
        id: sso
        uses: stormreply/terraform-workflow-controller/.github/actions/single-sign-on@main
        with:
          access_domain: ${{ inputs.access_domain }}
          region: ${{ inputs.region }}

  oidc:
    needs: sso
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get role credentials
        uses: stormreply/terraform-workflow-controller/.github/actions/get-role-credentials@main
        with:
          account_id: ${{ inputs.account_id }}
          region: ${{ inputs.region }}
          access_token: ${{ needs.sso.outputs.access_token }}

      - name: Prepare repository
        uses: stormreply/terraform-workflow-controller/.github/actions/prepare@main
        id: prepare
        with:
          environment: ""
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Check SLT bucket
        shell: bash
        run: |
          aws s3api create-bucket --bucket slt-${{ inputs.account_id }} --region ${{ inputs.region }} || true

      - name: Setup AWS credentials
        uses: stormreply/terraform-workflow-controller/.github/actions/setup-roles@main
        with:
          account_id: ${{ inputs.account_id }}
          region: ${{ inputs.region }}

      # - name: Terraform apply
      #   uses: stormreply/terraform-workflow-controller/.github/actions/terraform-apply@main
      #   with:
      #     region: ${{ inputs.region }}
      #     tfvars: ${{ inputs.tfvars }}
      #     tf_state_file: ${{ steps.prepare.outputs.state_file }}

      - name: Create resources
        shell: bash
        run: |
          aws sts get-caller-identity
          ls -la oidc

      - name: Terraform plan
        uses: stormreply/terraform-workflow-controller/.github/actions/terraform-plan@main
        with:
          account_id: ${{ inputs.account_id }}
          region: ${{ inputs.region }}
          tf_state_file: ${{ steps.prepare.outputs.state_file }}

      # - name: Create Terraform backend role
      # - name: Create Terraform deployment role
      # - name: Create OIDC provider