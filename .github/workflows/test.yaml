name: Test

permissions:
  contents: read
  id-token: write

on:
  workflow_call:
    inputs:
      var_file:
        type: string
        required: false
        default: ""
    secrets:
      STORM_LIBRARY_FOR_TERRAFORM:
        required: false
      TERRAFORM_PRIVATE_KEY:
        required: false

jobs:

  check:
    runs-on: ubuntu-latest
    steps:

      - name: Time
        shell: bash
        run: date

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: "${{ toJson(vars) }}"

      - name: scan
        uses: stormreply/storm-library-for-terraform/.github/actions/scan@main

  plan:
    runs-on: ubuntu-latest
    steps:

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: "${{ toJson(vars) }}"

      - name: checkout code
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/checkout@main
        with:
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}
          deployment_name: ${{ env.DEPLOYMENT_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          token: ${{ env.TOKEN }}

      - name: Terraform plan
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/plan@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}
          state_file: ${{ env.STATE_FILE }}
          var_file: ${{ inputs.var_file }}

  apply:
    needs: plan
    runs-on: ubuntu-latest
    steps:

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: "${{ toJson(vars) }}"

      - name: checkout code
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/checkout@main
        with:
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}
          deployment_name: ${{ env.DEPLOYMENT_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          token: ${{ env.TOKEN }}

      - name: terraform apply
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/apply@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}
          state_file: ${{ env.STATE_FILE }}
          var_file: ${{ inputs.var_file }}

  destroy:
    needs: apply
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: "${{ toJson(vars) }}"

      - name: checkout code
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/checkout@main
        with:
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}
          deployment_name: ${{ env.DEPLOYMENT_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          token: ${{ env.TOKEN }}

      - name: Terraform destroy
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/destroy@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}
          state_file: ${{ env.STATE_FILE }}

      - name: Unschedule actions
        uses: stormreply/storm-library-for-terraform/.github/actions/scheduler/unschedule@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          deployment_account: ${{ env.DEPLOYMENT_ACCOUNT }}
          deployment_name: ${{ env.DEPLOYMENT_NAME }}
          deployment_region: ${{ env.DEPLOYMENT_REGION }}
        continue-on-error: true
