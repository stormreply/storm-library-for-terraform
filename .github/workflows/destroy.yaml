name: Destroy

permissions:
  contents: read
  id-token: write

on:
  workflow_call:
    inputs:
      wait:
        type: string
        required: false
        default: ""
      environment:
        type: string
        required: false
        default: ""

jobs:

  schedule:
    if: inputs.wait != ''
    runs-on: ubuntu-latest
    steps:

      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          environment: ${{ inputs.environment }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Schedule destroy
        uses: stormreply/storm-library-for-terraform/.github/actions/scheduler/schedule@main
        with:
          action: destroy
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          deployment_account: ${{ vars.BACKEND_ACCOUNT }} # TODO:
          deployment_name: ${{ steps.prepare.outputs.deployment_name }}
          deployment_region: ${{ steps.prepare.outputs.deployment_region }}
          environment: ${{ inputs.environment }}
          wait: ${{ inputs.wait }}

  destroy:
    if: inputs.wait == ''
    runs-on: ubuntu-latest
    steps:

      - name: Prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        id: prepare
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          environment: ${{ inputs.environment }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Terraform destroy
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/destroy@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ steps.prepare.outputs.backend_region }}
          state_file: ${{ steps.prepare.outputs.state_file }}

      - name: Unschedule actions
        uses: stormreply/storm-library-for-terraform/.github/actions/scheduler/unschedule@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          deployment_account: ${{ vars.BACKEND_ACCOUNT }} # TODO:
          deployment_name: ${{ steps.prepare.outputs.deployment_name }}
          deployment_region: ${{ steps.prepare.outputs.deployment_region }}
        continue-on-error: true
