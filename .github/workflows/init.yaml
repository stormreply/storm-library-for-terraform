name: Init

on:
  workflow_dispatch:
    # checkov:skip=CKV_GHA_7: "GitHub Actions workflow_dispatch inputs MUST be empty"
    inputs:
      access_domain:
        description: "Access domain"
        type: string
      access_role:
        description: "Access role"
        type: string
      backend_account:
        description: "Backend account"
        type: string
      backend_region:
        description: "Backend region"
        type: string
      oidc_principal:
        description: "OIDC principal"
        type: string

permissions:
  actions: write
  contents: read

jobs:

  sso:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.get-access-token.outputs.access_token }}
    steps:

      - name: Time
        shell: bash
        run: date

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          yaml: |
            access_domain: ${{ inputs.access_domain || vars.ACCESS_DOMAIN }}
            backend_region: ${{ inputs.backend_region || vars.BACKEND_REGION }}

      - name: get access token
        id: get-access-token
        uses: stormreply/storm-library-for-terraform/.github/actions/get/access-token@main
        with:
          access_domain: ${{ env.ACCESS_DOMAIN }}
          backend_region: ${{ env.BACKEND_REGION }}

  oidc:
    needs: sso
    runs-on: ubuntu-latest
    steps:

      - name: set environment vars
        id: set-env
        uses: stormreply/storm-library-for-terraform/.github/actions/set/env@main
        with:
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          yaml: |
            access_domain: ${{ inputs.access_domain || vars.ACCESS_DOMAIN }}
            access_role: ${{ inputs.access_role || vars.ACCESS_ROLE }}
            backend_account: ${{ inputs.backend_account || vars.BACKEND_ACCOUNT }}
            backend_region: ${{ inputs.backend_region || vars.BACKEND_REGION }}
            deployment_account: ${{ inputs.backend_account || vars.BACKEND_ACCOUNT }}
            deployment_region: ${{ inputs.backend_region || vars.BACKEND_REGION }}
            environment: ${{ github.repository_owner }}
            oidc_principal: ${{ inputs.oidc_principal || vars.OIDC_PRINCIPAL || github.repository_owner }}
            terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}

      - name: set AWS backend credentials
        uses: stormreply/storm-library-for-terraform/.github/actions/set/aws/backend/credentials@main
        with:
          access_role: ${{ env.ACCESS_ROLE }}
          access_token: ${{ needs.sso.outputs.access_token }}
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}

      - name: create AWS backend bucket
        uses: stormreply/storm-library-for-terraform/.github/actions/set/aws/backend/bucket@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}

      - name: save AWS backend vars in ${{github.repository}}.vars
        uses: stormreply/storm-library-for-terraform/.github/actions/set/vars/aws-backend@main
        with:
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}
          repository: ${{ github.repository }}
          token: ${{ env.TOKEN }}

      - name: save AWS access vars in ${{github.repository}}.vars
        uses: stormreply/storm-library-for-terraform/.github/actions/set/vars/aws-access@main
        with:
          access_domain: ${{ env.ACCESS_DOMAIN }}
          access_role: ${{ env.ACCESS_ROLE }}
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_region: ${{ env.BACKEND_REGION }}
          oidc_principal: ${{ env.OIDC_PRINCIPAL }}
          repository: ${{ github.repository }}
          token: ${{ env.TOKEN }}

      - name: Terraform plan
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/plan2@main
        with:
          backend_account: ${{ env.BACKEND_ACCOUNT }}
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}
          deployment_name: ${{ env.DEPLOYMENT_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          oidc_principal: ${{ env.OIDC_PRINCIPAL }}
          state_file: ${{ env.STATE_FILE }}
          token: ${{ env.TOKEN }}
          var_file: init.tfvars

      - name: Terraform apply
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/apply@main
        with:
          backend_bucket: ${{ env.BACKEND_BUCKET }}
          backend_region: ${{ env.BACKEND_REGION }}
          state_file: ${{ env.STATE_FILE }}
          var_file: init.tfvars
