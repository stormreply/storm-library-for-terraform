name: Init

on:
  workflow_dispatch:
    # checkov:skip=CKV_GHA_7: "GitHub Actions workflow_dispatch inputs MUST be empty"
    inputs:
      access_domain:
        description: "Access domain"
        type: string
      access_role:
        description: "Access role"
        type: string
      backend_account:
        description: "Backend account"
        type: string
      backend_region:
        description: "Backend region"
        type: string
      oidc_principal:
        description: "OIDC principal"
        type: string

permissions:
  actions: write
  contents: read

jobs:

  sso:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.get-access-token.outputs.access_token }}
    steps:

      - name: set environment
        id: set-environment
        uses: stormreply/storm-library-for-terraform/.github/actions/set-environment@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          personal_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: "${{ toJson(vars) }}"

      - name: get access token
        id: get-access-token
        uses: stormreply/storm-library-for-terraform/.github/actions/init/get-access-token@main

  init:
    needs: sso
    runs-on: ubuntu-latest
    steps:

      - name: set environment
        id: set-environment
        uses: stormreply/storm-library-for-terraform/.github/actions/set-environment@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          personal_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}
          json: ${{ toJson(vars) }}
          yaml: |
            access_domain: ${{ inputs.access_domain || vars.ACCESS_DOMAIN }}
            access_role: ${{ inputs.access_role || vars.ACCESS_ROLE }}
            backend_account: ${{ inputs.backend_account || vars.BACKEND_ACCOUNT }}
            backend_region: ${{ inputs.backend_region || vars.BACKEND_REGION }}
            deployment_account: ${{ inputs.backend_account || vars.BACKEND_ACCOUNT }}
            deployment_region: ${{ inputs.backend_region || vars.BACKEND_REGION }}
            environment: ${{ github.actor }}
            oidc_principal: ${{ inputs.oidc_principal || vars.OIDC_PRINCIPAL || github.repository_owner }}

      - name: set backend credentials
        uses: stormreply/storm-library-for-terraform/.github/actions/init/set-backend-credentials@main
        with:
          access_token: ${{ needs.sso.outputs.access_token }}

      - name: create backend bucket
        uses: stormreply/storm-library-for-terraform/.github/actions/init/create-backend-bucket@main

      - name: save variables in ${{github.repository}}.vars
        uses: stormreply/storm-library-for-terraform/.github/actions/init/save-variables@main
        with:
          repository: ${{ github.repository }}

      - name: checkout code
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/checkout@main
        with:
          init: true

      - name: Terraform plan
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/plan@main
        with:
          var_file: init.tfvars

      - name: Terraform apply
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/apply@main
        with:
          var_file: init.tfvars
