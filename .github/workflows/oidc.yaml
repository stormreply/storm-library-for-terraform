name: OIDC

on:
  workflow_dispatch:
    # checkov:skip=CKV_GHA_7: "GitHub Actions workflow_dispatch inputs MUST be empty"
    inputs:
      access_domain:
        type: string
        required: true
        description: "Access domain"
        default: "DEFAULT"
      access_role:
        type: string
        required: true
        description: "Access role"
        default: AdministratorAccess
      backend_account:
        type: string
        required: true
        description: "Backend account"
        default: "DEFAULT"
      backend_region:
        type: string
        required: true
        description: "Backend region"
        default: eu-central-1
      github_principal:
        type: string
        required: true
        description: "Github principal"
        default: "DEFAULT"

permissions:
  actions: write
  contents: read

jobs:

  sso:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.sso.outputs.access_token }}
    steps:

      - name: Single sign on
        id: sso
        uses: stormreply/storm-library-for-terraform/.github/actions/oidc/single-sign-on@main
        with:
          access_domain: ${{ inputs.access_domain }}
          backend_region: ${{ inputs.backend_region }}

  oidc:
    needs: sso
    runs-on: ubuntu-latest
    steps:

      - name: Set role credentials
        uses: stormreply/storm-library-for-terraform/.github/actions/set/role-credentials@main
        with:
          access_role: ${{ inputs.access_role }}
          access_token: ${{ needs.sso.outputs.access_token }}
          backend_account: ${{ inputs.backend_account }}
          backend_region: ${{ inputs.backend_region }}

      - name: Prepare
        id: prepare
        uses: stormreply/storm-library-for-terraform/.github/actions/prepare@main
        with:
          backend_account: ${{ vars.BACKEND_ACCOUNT }}
          backend_region: ${{ vars.BACKEND_REGION }}
          private_access_token: ${{ secrets.STORM_LIBRARY_FOR_TERRAFORM }}
          terraform_app_id: ${{ vars.TERRAFORM_APP_ID }}
          terraform_private_key: ${{ secrets.TERRAFORM_PRIVATE_KEY }}

      - name: Create backend bucket
        id: create-backend-bucket
        uses: stormreply/storm-library-for-terraform/.github/actions/oidc/create-backend-bucket@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ inputs.backend_region }}

      - name: Set Github principal
        id: set-github-principal
        uses: stormreply/storm-library-for-terraform/.github/actions/set/github-principal@main
        with:
          github_principal: ${{ inputs.github_principal }}

      # TODO: save all that stuff which has been collected here
      - name: Save access domain
        uses: stormreply/storm-library-for-terraform/.github/actions/set/variable@main
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.prepare.outputs.token }}
          value: ${{ inputs.access_domain }}
          variable: ACCESS_DOMAIN

      - name: Save access role
        uses: stormreply/storm-library-for-terraform/.github/actions/set/variable@main
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.prepare.outputs.token }}
          value: ${{ inputs.access_role }}
          variable: ACCESS_ROLE

      - name: Save backend account
        uses: stormreply/storm-library-for-terraform/.github/actions/set/variable@main
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.prepare.outputs.token }}
          value: ${{ inputs.backend_account }}
          variable: BACKEND_ACCOUNT

      - name: Save backend region
        uses: stormreply/storm-library-for-terraform/.github/actions/set/variable@main
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.prepare.outputs.token }}
          value: ${{ inputs.backend_region }}
          variable: BACKEND_REGION

      - name: Save github principal
        uses: stormreply/storm-library-for-terraform/.github/actions/set/variable@main
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.prepare.outputs.token }}
          value: ${{ steps.set-github-principal.outputs.github_principal }}
          variable: GITHUB_PRINCIPAL

      - name: Terraform plan
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/plan@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ inputs.backend_region }}
          state_file: ${{ steps.prepare.outputs.state_file }}
          var_file: oidc.tfvars

      - name: Terraform apply
        uses: stormreply/storm-library-for-terraform/.github/actions/terraform/apply@main
        with:
          backend_bucket: ${{ steps.prepare.outputs.backend_bucket }}
          backend_region: ${{ inputs.backend_region }}
          state_file: ${{ steps.prepare.outputs.state_file }}
          var_file: oidc.tfvars
